package rtw.entity.gererAvis.avis.entity;

import java.io.Serializable;

import javax.persistence.CascadeType;
import javax.persistence.Embeddable;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

import rtw.entity.gererAvis.avis.avisAgence.entity.AvisAgence;
import rtw.entity.gererAvis.avis.avisAnnonce.entity.AvisAnnonce;
import rtw.entity.gererAvis.avis.interfaces.IAvis;
import rtw.entity.gererAvis.note.entity.Notes;
import rtw.entity.gererAvis.commentaire.entity.Commentaire;

/**
 * Entity {@link Avis} class mere abstraite de {@link AvisAgence} et {@link AvisAnnonce}.
 * 
 * @author Aurélien
 * @version 1
 * @since 13/03/2017
 *
 */
@Entity
@Inheritance(strategy=InheritanceType.SINGLE_TABLE)
public abstract class Avis implements IAvis,Serializable{
	
	/**
	 * TODO Récupération d'un utilisateur/Annonce + ID lié
	 * IdAvis est un double ID récupéré des fonctionnalité GererSite,GererAnnonce grace a leur service respectif.
	 * 
	 * @author Aurélien
	 * @version 1
	 * @since 14/03/2017
	 *
	 */
	@Embeddable
	private static class IdAvis implements Serializable{

			/**
			 * TODO
			 * Serial generated by default regenerate it when class complete 
			 */
			private static final long serialVersionUID = 1L;
			
			private String idUtilisateur;
			private String idAnnonce;
			
			/**
			 * Complete constructor 
			 * 
			 * @param idUtilisateur
			 * @param idAnnonce
			 */
			public IdAvis(String idUtilisateur, String idAnnonce) {
				
				super();
				this.idUtilisateur = idUtilisateur;
				this.idAnnonce = idAnnonce;
				
			}
	
			/**
			 * @return the idUtilisateur
			 */
			public String getIdUtilisateur() {
				
				return idUtilisateur;
				
			}
			
			/**
			 * @param idUtilisateur the idUtilisateur to set
			 */
			public void setIdUtilisateur(String idUtilisateur) {
				
				this.idUtilisateur = idUtilisateur;
				
			}
			
			/**
			 * @return the idAnnonce
			 */
			public String getIdAnnonce() {
				
				return idAnnonce;
				
			}
			
			/**
			 * @param idAnnonce the idAnnonce to set
			 */
			public void setIdAnnonce(String idAnnonce) {
				
				this.idAnnonce = idAnnonce;
				
			}
	
			/** 
			 * Affichage de l'objet en string.
			 */
			@Override
			public String toString() {
				
				return "IdAvis [getIdUtilisateur()=" + getIdUtilisateur() + ", getIdAnnonce()=" + getIdAnnonce() + "]";
				
			}
	}	
	
	/**
	 * TODO
	 * Serial generated by default regenerate it when class complete 
	 */
	private static final long serialVersionUID = 1L;
	
	@EmbeddedId
	private IdAvis idAvis;
	@OneToMany(fetch=FetchType.EAGER,cascade=CascadeType.ALL)
	private Notes notes;
	@OneToOne(fetch=FetchType.EAGER,cascade=CascadeType.ALL)
	private Commentaire commentaire;
	
	/*TODO Récupération d'un utilisateur/Annonce
	 * 
	 *private Utilisateur utilisateur;
	 *private Annonce annonce;
	 *
	 */
	
	/**
	 * Retourne l'ID de l'avis.
	 * 
	 * @return idAvis {@link IdAvis}
	 */
	public IdAvis getId() {
		return idAvis;
	}
	
	/**
	 * Renseigne l'ID de l'avis.
	 * 
	 * @param idAvis {@link IdAvis}
	 */
	public void setId(IdAvis idAvis) {
		this.idAvis = idAvis;
	}
	
	/**
	 * Retourne la note de l'avis.
	 * 
	 * @return note {@link Note}
	 */
	public Notes getNotes() {
		return notes;
	}
	
	/**
	 * Renseigne la note de l'avis.
	 * 
	 * @param note {@link Note}
	 */
	public void setNotes(Notes notes) {
		this.notes = notes;
	}
	
	/**
	 * Retourne le commentaire de l'avis.
	 * 
	 * @return commentaire {@link Commentaire}
	 */
	public Commentaire getCommentaire() {
		return commentaire;
	}
	
	/**
	 * Renseigne le commentaire de l'avis.
	 * 
	 * @param commentaire {@link Commentaire}
	 */
	public void setCommentaire(Commentaire commentaire) {
		this.commentaire = commentaire;
	}

	/** 
	 * Affichage de l'objet en string
	 */
	@Override
	public String toString() {
		return "Avis [getId()=" + getId() + ", getNote()=" + getNotes() + ", getCommentaire()=" + getCommentaire() + "]";
	}
	
	
	
}
